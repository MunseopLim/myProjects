version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - node
      - go
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-network

  postgresql:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.15.2
    volumes:
      - ./config/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - elasticsearch
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - elasticsearch
    networks:
      - app-network
    volumes:
      - grafana-data:/var/lib/grafana

  node:
    image: node:latest
    working_dir: /app
    volumes:
      - ./front:/app
    command: npm run start
    expose:
      - '3000'
    depends_on:
      - postgresql
    networks:
      - app-network

  go:
    build:
      context: ./back
      dockerfile: Dockerfile
    expose:
      - '8080'
    depends_on:
      - postgresql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
  esdata:
  grafana-data: